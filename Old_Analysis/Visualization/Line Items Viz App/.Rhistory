log(60000)
fucntion hi(x) {}
fucntion hi(x) {
hi <- function(x) {
print(x)
}
hi('hello!')
hi <- function(x,y) {
x+y
}
hi(7,3)
20 * hi(7,3)
x <- c(1,3,4,3,2,3,12)
y <- c(54,43,54,63,72,89,92)
summary(lm(y ~ x))
my.lm <- (lm(y ~ x))
my.lm$coefficients
my.lm$coefficients[1]
my.lm$coefficients[2]
my.lm$coefficients[0]
coef <- my.lm$coefficients[2]
coef
coef * 2
coef <- my.lm$coefficients[[2]]
coef
coef * 2
sqrt)coef
sqrt(coef)
X <- c(1,3,5,7,8,9)
y <- c(5,6,7,8,9,6)
plot(X,y)
?linegraph
abline(x,y)
abline(x)
abline(X,y)
y <- c(-273,-200,-150,-50,-20,1)
plot(X,y)
abline(X,y)
plot(X,y)
abline(y,X)
plot(X,y)
abline(X)
abline(y,X)
abline(X,y)
abline(X ~ y)
abline(y ~ X)
?abline
abline(h = X ~ v = y)
abline(h = X, v = y)
plot(X,y)
abline(h = X, v = y)
abline(v = X, h = y)
plot(X,y)
plot(-257,100)
plot(X,y)
plot(100,-257)
plot(X,y)
abline(-257,100)
plot(X,y)
abline(-257,50)
plot(X,y)
abline(-257,30)
summary(lm(y ~ x))
summary(lm(y ~ X))
plot(X,y)
abline(-257,35.411)
plot(X,y)
abline(-310.091,35.411)
final_submission <- read.csv("~/Dropbox/w207_final_project/final_submission.csv", stringsAsFactors=FALSE)
View(final_submission)
submit <- final_submission
length(submit$HandStart[submit$HandStart == 1])
load("~/Dropbox/w207_final_project/sample_submission.csv")
sample_submission <- read.csv("~/Dropbox/w207_final_project/sample_submission.csv")
View(sample_submission)
submit <- sample_submission
length(submit$HandStart[submit$HandStart == 1])
x<- for(i in 2:7) {
sapply(submit[,i], function(x) ifelse(x >.5,1,0))
}
View(x)
View(x)
binary <- c(rep,NA,263326)
for(i in 2:7) {
column <- sapply(submit[,i], function(x) ifelse(x >.5,1,0))
binary <- cbind(binary, column)
}
View(binary)
View(binary)
binary <- c(rep(NA,263326))
for(i in 2:7) {
column <- sapply(submit[,i], function(x) ifelse(x >.5,1,0))
binary <- cbind(binary, column)
}
View(binary)
mean(binary$HandStart)
binary <- data.frame(binary)
mean(binary$HandStart)
View(binary)
binary[,1] <- sample_submission[,1]
colnames(binary) <- colnames(submit)
View(binary)
mean(binary$HandStart)
binary <- c(rep(NA,263326))
for(i in 2:7) {
column <- sapply(submit[,i], function(x) ifelse(x > .7,1,0))
binary <- cbind(binary, column)
}
binary <- data.frame(binary)
binary[,1] <- sample_submission[,1]
colnames(binary) <- colnames(submit)
View(binary)
mean(binary$HandStart)
write.csv(binary, submission_8_10.csv)
?write.csv
write.csv(binary, file = "submission_8_10.csv")
View(binary)
write.csv(binary, file = "submission_8_10.csv", row.names = F)
nrow(binary)
nrow(sample_submission)
library(eshtest)
hi("TEST")
hi(90)
?hi
?apply
?sqllite
?sqlite
install.packages("R2D3")
install.packages("R2D3")
install.packages("devtools")
library("devtools")
install_github("jamesthomson/R2D3")
library("R2D3")
data(celebs)
colnames(celebs$relationships)<-c('source', 'target')
colnames(celebs$celebs)<-c('name', 'group')
JSON<-jsonNodesLinks(celebs$celebs, celebs$relationships)
D3Force(JSON, file_out="Force.html")
getwd()
data(celebs)
colnames(celebs$relationships)<-c('source', 'target')
colnames(celebs$celebs)<-c('name', 'group')
JSON<-jsonNodesLinks(celebs$celebs, celebs$relationships)
D3Force(JSON, file_out="D3_Test.html")
print("Open d3_Test from:")
print(getwd())
print(paste("Open d3_Test from:",getwd())
print(paste("Open d3_Test from:",getwd()))
print(paste("Open d3_Test from:",getwd()))
?R2D3
??R2D3
summary(R2D3)
search()
R2D3
help(r2d3)
library("R2D3")
install.packages("RPostgreSQL")
dbDisconnect(con)
dbUnloadDriver(drv)
x <- 5
x
load("~/Desktop/R Projects/SotS Analysis 10-26/SotS_10_30.RData")
dists_noak$most_least[dists_noak$most_least == 1] <- "Most"
dists_noak$most_least
dists_noak$most_affluent <- ifelse(dists_noak$frl_decile > 7.5, 1, 0)
dists_noak$least_affluent <- ifelse(dists_noak$frl_decile < 2.5, 5, 0)
dists_noak$most_least <- dists_noak$most_affluent + dists_noak$least_affluent
dists_noak$most_least[dists_noak$most_least == 1] <- "Least"
dists_noak$most_least[dists_noak$most_least == 5] <- "Most"
dists_noak$most_least
frl_aff <- (dists_noak, dists_noak$most_least != '0'_
frl_aff <- (dists_noak, dists_noak$most_least != '0')
frl_aff <- subset(dists_noak, dists_noak$most_least != '0')
nrow(frl_aff)
afford_frl_band <- aggregate(frl_aff$meets_aff_target ~ frl_aff$most_least + frl_aff$band_percentile, FUN=mean)
afford_frl_band <- data.frame(aggregate(frl_aff$meets_aff_target ~ frl_aff$most_least + frl_aff$band_percentile, FUN=mean))
View(afford_frl_band)
?floor
dists_noak$band_percentile <- sapply(dists_noak$total_bandwidth, function(x) ecdf(dists_noak$total_bandwidth)(floor(x,1)))
dists_noak$band_percentile <- sapply(dists_noak$total_bandwidth, function(x) ecdf(dists_noak$total_bandwidth)(round(x,1)))
afford_frl_band <- data.frame(aggregate(frl_aff$meets_aff_target ~ frl_aff$most_least + frl_aff$band_percentile, FUN=mean))
View(afford_frl_band)
frl_aff <- subset(dists_noak, dists_noak$most_least != '0')
nrow(frl_aff)
afford_frl_band <- data.frame(aggregate(frl_aff$meets_aff_target ~ frl_aff$most_least + frl_aff$band_percentile, FUN=mean))
View(afford_frl_band)
dists_noak$band_percentile <- sapply(dists_noak$total_bandwidth, function(x) ecdf(dists_noak$total_bandwidth)(round(x,1)))
frl_aff <- subset(dists_noak, dists_noak$most_least != '0')
afford_frl_band <- data.frame(aggregate(frl_aff$meets_aff_target ~ frl_aff$most_least + frl_aff$band_percentile, FUN=mean))
View(afford_frl_band)
dists_noak$band_percentile <- sapply(dists_noak$total_bandwidth, function(x) round(ecdf(dists_noak$total_bandwidth)(x),1))
frl_aff <- subset(dists_noak, dists_noak$most_least != '0')
nrow(frl_aff)
afford_frl_band <- data.frame(aggregate(frl_aff$meets_aff_target ~ frl_aff$most_least + frl_aff$band_percentile, FUN=mean))
View(afford_frl_band)
dists_noak$band_percentile <- sapply(dists_noak$total_bandwidth, function(x) round(ecdf(dists_noak$total_bandwidth)(x),2))
frl_aff <- subset(dists_noak, dists_noak$most_least != '0')
nrow(frl_aff)
afford_frl_band <- data.frame(aggregate(frl_aff$meets_aff_target ~ frl_aff$most_least + frl_aff$band_percentile, FUN=mean))
View(afford_frl_band)
write.csv(afford_frl_band, "afford_frl_percentile.csv")
getwd()
write.csv(dists_noak, "dists_percentile.csv")
View(dist_nces)
View(dists_nces)
write.csv(dists_nces, "districts_ulocal.csv")
nrow(dists_nces)
.94-.67
.27/.94
aggregate(li_10g$cost_per_line ~ li_10g$locale, FUN = function(x) quantile(x, probs = c(.1, .25, .5, .75, .9), na.rm = T))
quantile(li_10g$cost_per_line, probs = c(.1, .25, .5, .75, .9), na.rm = T)
dbListConnections(drv)
dbListConnections(drv)
dbListConnections(drv)
shiny::runApp('Documents/ficher/Visualization/Line Items Viz App')
shiny::runApp('Documents/ficher/Visualization/Line Items Viz App')
shiny::runApp('Documents/ficher/Visualization/Line Items Viz App')
shiny::runApp('Documents/ficher/Visualization/Line Items Viz App')
