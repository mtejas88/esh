{
    "config":
    {
        "haltOnError": false,
        "parallel": true
    },
 "extractor" : {
    "jdbc": { "driver": "org.postgresql.Driver",
              "url": "jdbc:postgresql://ec2-54-156-167-103.compute-1.amazonaws.com:5432/dai3g95tesvtj9?ssl=true&sslfactory=org.postgresql.ssl.NonValidatingFactory",
              "userName": "ufr4in10gd10qn",
              "userPassword": "pe0b7b0f0b61ce6694e37dd3084d35ece490333517f0b9b7dd733f61db7de2dba",
              "query": "
                with li_lookup as (

                  select
                    dl.district_esh_id,
                    eb.entity_id::varchar as recipient_id,
                    eb.entity_type as recipient_type,
                    c.campus_id as recipient_campus_id,
                    
                    open_flag_labels,
                    open_tag_labels,
                    a.line_item_id,
                    li.num_lines::numeric,
                    
                    case when li.connect_category ilike '%Fiber%' then 'Fiber' else 'Non-Fiber' end as connect_category,
                    
                    case when isp_conditions_met = true then 'ISP'
                    when backbone_conditions_met = true then 'Backbone'
                    when upstream_conditions_met = true then 'Upstream'
                    when internet_conditions_met = true then 'Internet'
                    when wan_conditions_met = true then 'WAN'
                    end as purpose,
                    
                    eba.entity_id as applicant_id,
                    eba.entity_type as applicant_type,
                    fli.billed_entity_name as applicant_name,
                    
                    case
                      when f.num_open_flags is null
                        then 0
                      else f.num_open_flags
                    end as num_open_flags,
                    sum(  case
                            when a.num_lines_to_allocate is null
                              then 0
                            else a.num_lines_to_allocate
                          end
                        )::numeric as sum_lines_to_allocate


                  from
                    public.esh_allocations a

                  join public.esh_line_items li
                  on a.line_item_id = li.id

                  left join (
                    select
                      flaggable_id,
                      array_agg(label) as open_flag_labels,
                      count(label) as num_open_flags

                    from
                      public.flags f

                    where f.status = 'open'
                    and f.flaggable_type = 'LineItem'

                    group by
                      flaggable_id
                  ) f
                  on li.id = f.flaggable_id
                  
                 left join (
                    select
                      taggable_id,
                      array_agg(label) as open_tag_labels

                    from
                      public.tags t

                    where t.deleted_at is null
                    and t.taggable_type = 'LineItem'
                    and t.funding_year=2017

                    group by
                      taggable_id
                  ) t
                  on li.id = t.taggable_id

                  left join entity_bens eb
                  on a.recipient_ben = eb.ben
                  
                  left join entity_bens eba
                  on li.applicant_ben = eba.ben

                  join public.fy2017_district_lookup_w_nifs_matr dl
                  on eb.entity_id::varchar = dl.esh_id

                  left join public.fy2017_schools_demog_matr c
                  on eb.entity_id::varchar = c.school_esh_id

                  left join fy2017.frn_line_items fli
                  on li.frn_complete = fli.line_item

                  where li.funding_year = 2017
                    and li.broadband = true
                    and li.isp_conditions_met = false
                    and li.backbone_conditions_met = false
                    and li.consortium_shared = false
                    and li.num_lines != -1
                    and (not('canceled' = any(f.open_flag_labels) or
                             'video_conferencing' = any(f.open_flag_labels) or
                             'exclude' = any(f.open_flag_labels))
                        or f.open_flag_labels is null)

                  group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14

                ),

                temp as (

                  select ac.*,

                  case
                  
                    when not(li.connect_category ilike '%Fiber%')
                    and li.num_lines != -1
                    and ( li.num_lines = alloc.recipients or 
                        li.num_lines = alloc.alloc or 
                        li.num_lines = alloc.num_campuses_and_others ) 
                      then 'Correct'
                    
                    when li.connect_category ilike '%Fiber%'
                    and li.num_lines != -1
                    and ( li.num_lines >= alloc.recipients or 
                        li.num_lines >= alloc.alloc or 
                        li.num_lines >= alloc.num_campuses_and_others ) 
                      then 'Correct'
                      
                    else 'Not Correct'
                  end as correct_allocation

                from (
                    select
                      lil.*,
                      case
                        when lil.num_lines > lil.sum_lines_to_allocate
                          then lil.sum_lines_to_allocate
                        else lil.num_lines
                      end as allocation_lines

                    from
                      li_lookup lil
                  ) ac

                  left join public.esh_line_items li
                  on ac.line_item_id = li.id
                  and li.broadband = true
                  and li.funding_year = 2017

                  left join (
                    select  line_item_id,
                      sum(a.num_lines_to_allocate) as alloc,
                      count(distinct a.recipient_ben) as recipients,
                      count(distinct c.campus_id) + sum(case when c.campus_id is null then 1
                                                        else 0 end) as num_campuses_and_others
                    from public.esh_allocations a

                    join public.esh_line_items li
                    on a.line_item_id = li.id
                    and li.funding_year = 2017

                    left join public.entity_bens eb
                    on a.recipient_ben = eb.ben

                    left join public.fy2017_schools_demog_matr c
                    on eb.entity_id::varchar = c.school_esh_id

                    where li.broadband = true
                    group by line_item_id
                  ) alloc
                  on ac.line_item_id = alloc.line_item_id
                  group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17
                  order by 1, 3

                ),

                final as(
                select 
                                district_esh_id,
                                recipient_id,
                                recipient_type,
                                recipient_campus_id,
                                coalesce(open_flag_labels::varchar,'None') as open_flag_labels,
                                coalesce(open_tag_labels::varchar,'None') as open_tag_labels,
                                line_item_id,
                                num_lines,
                                connect_category,
                                purpose,
                                applicant_id,
                                applicant_type,
                                applicant_name,
                                num_open_flags,
                                sum_lines_to_allocate,
                                allocation_lines,
                                correct_allocation,
                                case when connect_category='Fiber' and correct_allocation='Correct' then 'CorrectFiber'
                                when connect_category='Fiber' and correct_allocation='Not Correct' then 'IncorrectFiber'
                                when connect_category='Non-Fiber' and correct_allocation='Correct' then 'CorrectNonFiber'
                                when connect_category='Non-Fiber' and correct_allocation='Not Correct' then 'IncorrectNonFiber'
                                end as "edgeClass"
                from temp
                join public.fy2017_districts_deluxe_matr dd
                on temp.district_esh_id=dd.esh_id
                where include_in_universe_of_districts
                and district_type='Traditional'
                )

                select * from final where "edgeClass"='IncorrectNonFiber'" }
  },
    "transformers": [
    {
        "merge":
        {
            "joinFieldName": "recipient_id",
            "lookup": "Recipient.recipient_id"
        }
    },
    {
        "vertex":
        {
            "class": "Recipient"
        }
    },
    {
        "edge":
        {
            "class": "IncorrectNonFiber",
            "joinFieldName": "applicant_id",
            "lookup": "Applicant.applicant_id",
            "direction": "in",
            "edgeFields":
            {
                "open_flag_labels": "${input.open_flag_labels}",
                "open_tag_labels": "${input.open_tag_labels}",
                "line_item_id": "${input.line_item_id}",
                "num_lines": "${input.num_lines}",
                "purpose": "${input.purpose}"
            },
            "unresolvedLinkAction": "NOTHING"
        }
    },
    {
        "field":
        {
            "fieldNames": ["district_esh_id",
                "recipient_id",
                "recipient_type",
                "recipient_campus_id", "connect_category",
                "applicant_id",
                "applicant_type",
                "applicant_name", "sum_lines_to_allocate",
                "allocation_lines",
                "correct_allocation"
            ],
            "operation": "remove"
        }
    }],
    "loader":
    {
        "orientdb":
        {
            "dbURL": "remote:localhost/databases/DistrictsAllocations",
            "serverUser": "root",
            "serverPassword": "g0S@t",
            "dbUser": "admin",
            "dbPassword": "admin",
            "dbType": "graph",
            "batchCommit": 1000,
            "classes": [
            {
                "name": "Recipient",
                "extends": "V"
            },
            {
                "name": "Applicant",
                "extends": "V"
            }]
        }
    }
}