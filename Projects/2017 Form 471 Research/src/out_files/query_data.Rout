
R version 3.3.2 (2016-10-31) -- "Sincere Pumpkin Patch"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # clear the console
> cat("\014")
> 
> rm(list=ls())
> 
> args = commandArgs(trailingOnly=TRUE)
> github_path <- args[1]
> 
> ## load packages (if not already in the environment)
> packages.to.install <- c("DBI", "rJava", "RJDBC", "dotenv", "gridExtra")
> for (i in 1:length(packages.to.install)){
+   if (!packages.to.install[i] %in% rownames(installed.packages())){
+     install.packages(packages.to.install[i])
+   }
+ }
> library(DBI)
> library(rJava)
> library(RJDBC)
> library(dotenv)
> library(gridExtra)
> 
> #this is my github path. DONT FORGET TO COMMENT OUT
> #github_path <- '~/Documents/Analysis/ficher/'
> setwd(paste(github_path, 'Projects/2017 Form 471 Research', sep=''))
> 
> 
> options(java.parameters = "-Xmx4g" )
> 
> ## source environment variables
> source(paste(github_path, "General_Resources/common_functions/source_env.R", sep=""))
> source_env("~/.env")
> 
> ##**************************************************************************************************************************************************
> ## QUERY THE DB
> 
> ## load PostgreSQL Driver
> pgsql <- JDBC("org.postgresql.Driver", paste(github_path, "General_Resources/postgres_driver/postgresql-9.4.1212.jre7.jar", sep=""), "`")
> 
> ## connect to the database
> con <- dbConnect(pgsql, url=url, user=user, password=password)
> 
> ## query function
> querydb <- function(query_name){
+   query <- readChar(query_name, file.info(query_name)$size)
+   data <- dbGetQuery(con, query)
+   return(data)
+ }
> 
> frn_line_items <- querydb('src/frn_line_items.sql')
> basic_informations <- querydb('src/basic_informations.sql')
> recipients_of_services <- querydb('src/recipients_of_services.sql')
> 
> ## disconnect from database
> dbDisconnect(con)
[1] TRUE
> 
> ##**************************************************************************************************************************************************
> 
> 
> write.csv(frn_line_items, 'data/raw/frn_line_items_2017.csv', row.names = FALSE)
> write.csv(basic_informations, 'data/raw/basic_informations_2017.csv', row.names = FALSE)
> write.csv(recipients_of_services, 'data/raw/recipients_2017.csv', row.names = FALSE)
> 
> proc.time()
   user  system elapsed 
  4.454   0.564  14.454 
