
R version 3.3.0 (2016-05-03) -- "Supposedly Educational"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## =========================================
> ##
> ## QUERY DATA FROM THE DB
> ##
> ## =========================================
> 
> ## Clearing memory
> rm(list=ls())
> 
> args = commandArgs(trailingOnly=TRUE)
> github_path <- args[1]
> 
> ## load packages (if not already in the environment)
> packages.to.install <- c("DBI", "rJava", "RJDBC", "dotenv")
> for (i in 1:length(packages.to.install)){
+   if (!packages.to.install[i] %in% rownames(installed.packages())){
+     install.packages(packages.to.install[i])
+   }
+ }
> library(DBI)
> library(rJava)
> library(RJDBC)
> library(dotenv)
Warning message:
package ‘dotenv’ was built under R version 3.3.2 
> options(java.parameters = "-Xmx4g" )
> 
> ## source environment variables
> source(paste(github_path, "General_Resources/common_functions/source_env.R", sep=""))
> source_env("~/.env")
> 
> ## source function to correct dataset
> source(paste(github_path, "General_Resources/common_functions/correct_dataset.R", sep=""))
> 
> ##**************************************************************************************************************************************************
> ## QUERY THE DB
> 
> ## load PostgreSQL Driver
> pgsql <- JDBC("org.postgresql.Driver", paste(github_path, "General_Resources/postgres_driver/postgresql-9.4.1212.jre7.jar", sep=""), "`")
> 
> ## connect to the database
> con <- dbConnect(pgsql, url=url, user=user, password=password)
> 
> ## query function
> querydb <- function(query_name){
+   query <- readChar(query_name, file.info(query_name)$size)
+   data <- dbGetQuery(con, query)
+   return(data)
+ }
> 
> dd.2016 <- querydb(paste(github_path, "General_Resources/sql_scripts/2016_deluxe_districts_crusher_materialized.SQL", sep=""))
> dd.2016 <- correct.dataset(dd.2016, sots.flag=0, services.flag=0)
> districts.sp.2016 <- querydb(paste(github_path, "General_Resources/sql_scripts/2016_districts_service_provider_assignments.SQL", sep=""))
> 
> ## disconnect from database
> dbDisconnect(con)
[1] TRUE
> 
> ##**************************************************************************************************************************************************
> ## write out the datasets
> 
> write.csv(dd.2016, "data/raw/deluxe_districts_2016.csv", row.names=F)
> write.csv(districts.sp.2016, "data/raw/districts_sp_assignments_2016.csv", row.names=F)
> 
> proc.time()
   user  system elapsed 
 10.328   0.553  11.993 
