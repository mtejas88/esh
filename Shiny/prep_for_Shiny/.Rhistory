cat("\014")
# Remove every object in the environment
rm(list = ls())
#install and load packages
lib <- c("dplyr", "ggplot2", "gridExtra", "reshape2", "scales", "tidyr")
sapply(lib, function(x) require(x, character.only = TRUE))
ifelse(usage == 'One-to-One', 1, ifelse(usage == 'Moderate'), 0.7, 1.33)
felse(usage == 'One-to-One', 1, ifelse(usage == 'Moderate'), 0.7,
ifelse(usage == 'Media-Rich', 1.33, 'Error')
ifelse(usage == 'One-to-One', 1, ifelse(usage == 'Moderate', 0.7,
ifelse(usage == 'Media-Rich', 1.33, 'Error'))
ifelse(usage == 'One-to-One', 1, ifelse(usage == 'Moderate', 0.7,
ifelse(usage == 'Media-Rich', 1.33, 'Error')))
usage <- 'hmm'
# adjust usage based on bandwidth needs
ifelse(usage == 'One-to-One', 1, ifelse(usage == 'Moderate', 0.7,
ifelse(usage == 'Media-Rich', 1.33, 'Error')))
ifelse(usage == 'One-to-One', 1, ifelse(usage == 'Moderate', 0.7,
ifelse(usage == 'Media-Rich', 1.33, 'Error')))
usage <- 'Moderate'
# adjust usage based on bandwidth needs
ifelse(usage == 'One-to-One', 1, ifelse(usage == 'Moderate', 0.7,
ifelse(usage == 'Media-Rich', 1.33, 'Error')))
locale <- 'Rural'
avg_cost_per_mile <- ifelse(locale == 'Rural', 52000,
ifelse(locale == 'Small Town', 68500,
ifelse(locale %in% c('Suburban', 'Urban'), 88500, 'Error')))
ifelse(locale == 'Rural', 52000,
ifelse(locale == 'Small Town', 68500,
ifelse(locale %in% c('Suburban', 'Urban'), 88500, 'Error')))
ifelse(locale == 'Rural', 12,
ifelse(locale == 'Small Town', 6,
ifelse(locale %in% c('Suburban', 'Urban'), 1, 'Error')))
ifelse(district_size == 'Tiny', 1,
ifelse(district_size == 'Small', 1,
ifelse(district_size == 'Medium', 1.5,
ifelse(district_size == 'Large', 2,
ifelse(district_size == 'Mega', 2.75, 'Error')))))
ifelse(district_size == 'Tiny', 1,
ifelse(district_size == 'Small', 1,
ifelse(district_size == 'Medium', 1.5,
ifelse(district_size == 'Large', 2,
ifelse(district_size == 'Mega', 2.75, 'Error')))))
district_size <- 'Tiny'
ifelse(district_size == 'Tiny', 1,
ifelse(district_size == 'Small', 1,
ifelse(district_size == 'Medium', 1.5,
ifelse(district_size == 'Large', 2,
ifelse(district_size == 'Mega', 2.75, 'Error')))))
shiny::runApp('Google Drive/github/ficher/Shiny')
shiny::runApp('Google Drive/github/ficher/Shiny')
shiny::runApp('Google Drive/github/ficher/Shiny')
shiny::runApp('Google Drive/github/ficher/Shiny')
shiny::runApp('Google Drive/github/ficher/Shiny')
shiny::runApp('Google Drive/github/ficher/Shiny')
shiny::runApp('Google Drive/github/ficher/Shiny')
shiny::runApp('Google Drive/github/ficher/Shiny')
shiny::runApp('Google Drive/github/ficher/Shiny')
shiny::runApp('Google Drive/github/ficher/Shiny')
shiny::runApp('Google Drive/github/ficher/Shiny')
shiny::runApp('Google Drive/github/ficher/Shiny')
shiny::runApp('Google Drive/github/ficher/Shiny')
shiny::runApp('Google Drive/github/ficher/Shiny')
shiny::runApp('Google Drive/github/ficher/Shiny')
shiny::runApp('Google Drive/github/ficher/Shiny')
shiny::runApp('Google Drive/github/ficher/Shiny')
shiny::runApp('Google Drive/github/ficher/Shiny')
shiny::runApp('Google Drive/github/ficher/Shiny')
shiny::runApp('Google Drive/github/ficher/Shiny')
shiny::runApp('Google Drive/github/ficher/Shiny')
shiny::runApp('Google Drive/github/ficher/Shiny')
shiny::runApp('Google Drive/github/ficher/Shiny')
shiny::runApp('Google Drive/github/ficher/Shiny')
shiny::runApp('Google Drive/github/ficher/Shiny')
shiny::runApp('Google Drive/github/ficher/Shiny')
shiny::runApp('Google Drive/github/ficher/Shiny')
shiny::runApp('Google Drive/github/ficher/Shiny')
shiny::runApp('Google Drive/github/ficher/Shiny')
shiny::runApp('Google Drive/github/ficher/Shiny')
shiny::runApp('Google Drive/github/ficher/Shiny')
shiny::runApp('Google Drive/github/ficher/Shiny')
shiny::runApp('Google Drive/github/ficher/Shiny')
shiny::runApp('Google Drive/github/ficher/Shiny')
shiny::runApp('Google Drive/github/ficher/Shiny')
shiny::runApp('Google Drive/github/ficher/Shiny')
shiny::runApp('Google Drive/github/ficher/Shiny')
shiny::runApp('Google Drive/github/ficher/Shiny')
shiny::runApp('Google Drive/github/ficher/Shiny')
shiny::runApp('Google Drive/github/ficher/Shiny')
shiny::runApp('Google Drive/github/ficher/Shiny')
shiny::runApp('Google Drive/github/ficher/Shiny')
shiny::runApp('Google Drive/github/ficher/Shiny')
shiny::runApp('Google Drive/R/shiny_download_tool')
shiny::runApp('Google Drive/github/ficher/Shiny')
shiny::runApp('Google Drive/github/ficher/Shiny')
# Clear the console
cat("\014")
# Remove every object in the environment
rm(list = ls())
install.packages("rJava", type = "source", repos = "http://cran.us.r-project.org")
library(rJava)
library(rJava)
if (!require("RJDBC")) {
install.packages("RJDBC",repos="http://cran.rstudio.com/")
library("RJDBC")
}
# Clear the console
cat("\014")
# Remove every object in the environment
rm(list = ls())
library(rJava)
if (!require("RJDBC")) {
install.packages("RJDBC",repos="http://cran.rstudio.com/")
library("RJDBC")
}
if (!require("RJDBC")) {
install.packages("RJDBC",repos="http://cran.rstudio.com/")
library("RJDBC")
}
R CMD javareconf
sudo ln -s $(/usr/libexec/java_home)/jre/lib/server/libjvm.dylib /usr/local/lib
cat("\014")
rm(list = ls())
install.packages("rJava", type="source”)
install.packages("rJava", type="source")
library(rJava)
library(rJava)
library(rJava)
remove.packages(rJava, libs)
remove.packages(rJava)
remove.packages(rJava, type = "source")
Sys.setenv(JAVA_HOME='/Library/Java/JavaVirtualMachines/jdk1.8.0_25.jdk/Contents/Home/jre')
library(rJava)
Sys.setenv
Sys.getenv
rJava
apt-get install r-cran-rjava
library(rJava)
library(rJava)
library(rJava)
env
system(env)
system("env")
library(rJava)
dyn.load('/Library/Java/JavaVirtualMachines/jdk1.8.0_60.jdk/Contents/Home/jre/lib/server/libjvm.dylib')
library(rJava)
library(RJDBC)
pgsql <- JDBC("org.postgresql.Driver", "~/Downloads/postgresql-9.4.1208.jar", "`”)
con <- dbConnect(pgsql, "jdbc:postgresql://ec2-54-204-38-194.compute-1.amazonaws.com:5572/daddkut7s5671q?ssl=true&sslfactory=org.postgresql.ssl.NonValidatingFactory", password="p6omsea0tv60mlfjnosesb7ereu", user="u3v583a3p2pp85”)
pgsql <- JDBC("org.postgresql.Driver", "~/Downloads/postgresql-9.4.1208.jar", "`")
con <- dbConnect(pgsql, "jdbc:postgresql://ec2-54-204-38-194.compute-1.amazonaws.com:5572/daddkut7s5671q?ssl=true&sslfactory=org.postgresql.ssl.NonValidatingFactory", password="p6omsea0tv60mlfjnosesb7ereu", user="u3v583a3p2pp85")
con
shiny::runApp('Google Drive/github/ficher/Shiny')
runApp('Google Drive/github/ficher/Shiny')
runApp('Google Drive/github/ficher/Shiny')
runApp('Google Drive/github/ficher/Shiny')
runApp('Google Drive/github/ficher/Shiny')
runApp('Google Drive/github/ficher/Shiny')
shiny::runApp('Google Drive/github/ficher/Shiny')
shiny::runApp('Google Drive/github/ficher/Shiny')
runApp('Google Drive/github/ficher/Shiny')
runApp('Google Drive/github/ficher/Shiny')
shiny::runApp('Google Drive/github/ficher/Shiny')
shiny::runApp('Desktop/ficher/Shiny')
runApp('Desktop/ficher/Shiny')
shiny::runApp('Desktop/my_Shiny')
runApp('Desktop/ficher/Shiny')
runApp('Desktop/ficher/Shiny')
runApp('Desktop/ficher/Shiny')
runApp('Desktop/ficher/Shiny')
runApp('Desktop/ficher/Shiny')
runApp('Desktop/ficher/Shiny')
runApp('Desktop/ficher/Shiny')
runApp('Desktop/ficher/Shiny')
runApp('Desktop/ficher/Shiny')
runApp('Desktop/my_Shiny')
runApp('Desktop/ficher/Shiny')
runApp('Desktop/ficher/Shiny')
runApp('Desktop/ficher/Shiny')
runApp('Desktop/my_Shiny')
runApp('Desktop/my_Shiny')
library(leaflet)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=174.768, lat=-36.852, popup="The birthplace of R")
m  # Print the map
leaflet() %>%
setView(lng = 37.7749, lat = 122.4194, zoom = 12)
leaflet() %>%
setView(lng = 37.775, lat = -122.4195, zoom = 12)
leaflet() %>%
setView(lng = 37.7749, lat = -122.4194, zoom = 12)
leaflet() %>% setView(lng = -71.0589, lat = 42.3601, zoom = 12)
cat("\014")
rm(list = ls())
leaflet() %>% setView(lng = -71.0589, lat = 42.3601, zoom = 12)
leaftlet()
leaflet()
leaflet() %>% setView(lng = -71.0589, lat = 42.3601, zoom = 12)
addTiles()
leaflet() %>%
setView(lng = -71.0589, lat = 42.3601, zoom = 12) %>%
addTiles()
leaflet() %>%
setView(lng = 37.7749, lat = -122.4194, zoom = 12) %>%
addTiles()
leaflet() %>%
setView(lng = 37.7749, lat = -122.4194, zoom = 10) %>%
addTiles()
leaflet() %>%
setView(lng = 37.7749, lat = -122.4194, zoom = 8) %>%
addTiles()
leaflet() %>%
setView(lng = -71.0589, lat = 42.3601, zoom = 12) %>%
addTiles()
leaflet() %>%
setView(lng = 37.7749, lat = -122.4194, zoom = 8) %>%
addTiles()
leaflet() %>%
setView(lng = -122.4194, lat = 37.7749, zoom = 8) %>% # san francisco
addTiles()
leaflet() %>%
setView(lng = -122.4194, lat = 37.7749, zoom = 12) %>% # san francisco
addTiles()
leaflet() %>%
setView(lng = -122.4194, lat = 37.7749, zoom = 12) %>% # san francisco
addProviderTiles('CartoDB.Positron')
leaflet() %>%
setView(lng = -122.4194, lat = 37.7749, zoom = 13) %>% # san francisco
addProviderTiles('CartoDB.Positron')
leaflet() %>%
setView(lng = -122.4194, lat = 37.7749, zoom = 12) %>% # san francisco
addProviderTiles('CartoDB.Positron') %>%
addMarkers(lng = -122.4017, lat = 37.7930, popup = "EducationSuperHighway")
runApp('Desktop/ficher/Shiny')
greenLeafIcon <- makeIcon(
iconUrl = "http://leafletjs.com/docs/images/leaf-green.png",
iconWidth = 38, iconHeight = 95,
iconAnchorX = 22, iconAnchorY = 94,
shadowUrl = "http://leafletjs.com/docs/images/leaf-shadow.png",
shadowWidth = 50, shadowHeight = 64,
shadowAnchorX = 4, shadowAnchorY = 62
)
leaflet() %>%
setView(lng = -122.4194, lat = 37.7749, zoom = 12) %>% # san francisco
addProviderTiles('CartoDB.Positron') %>%
addMarkers(lng = -122.4017, lat = 37.7930,
icon = greenLeafIcon,
popup = "EducationSuperHighway")
testIcons <- iconList(
home = makeIcon("~/Downloads/home.png", 18)
)
leaflet() %>%
setView(lng = -122.4194, lat = 37.7749, zoom = 12) %>% # san francisco
addProviderTiles('CartoDB.Positron') %>%
addMarkers(lng = -122.4017, lat = 37.7930,
icon = home,
popup = "EducationSuperHighway")
setView(lng = -122.4194, lat = 37.7749, zoom = 12) %>% # san francisco
addProviderTiles('CartoDB.Positron') %>%
addMarkers(lng = -122.4017, lat = 37.7930,
icon = ~testIcons(home),
popup = "EducationSuperHighway")
leaflet() %>%
setView(lng = -122.4194, lat = 37.7749, zoom = 12) %>% # san francisco
addProviderTiles('CartoDB.Positron') %>%
addMarkers(lng = -122.4017, lat = 37.7930,
icon = ~testIcons(home),
popup = "EducationSuperHighway")
oceanIcons <- iconList(
ship = makeIcon("ferry-18.png", "ferry-18@2x.png", 18, 18),
pirate = makeIcon("danger-24.png", "danger-24@2x.png", 24, 24)
)
# Some fake data
df <- sp::SpatialPointsDataFrame(
cbind(
(runif(20) - .5) * 10 - 90.620130,  # lng
(runif(20) - .5) * 3.8 + 25.638077  # lat
),
data.frame(type = factor(
ifelse(runif(20) > 0.75, "pirate", "ship"),
c("ship", "pirate")
))
)
leaflet(df) %>% addTiles() %>%
# Select from oceanIcons based on df$type
addMarkers(icon = ~oceanIcons[type])
leaflet() %>%
setView(lng = -122.4194, lat = 37.7749, zoom = 12) %>% # san francisco
addProviderTiles('CartoDB.Positron') %>%
addMarkers(lng = -122.4017, lat = 37.7930,
icon = ~testIcons("home"),
popup = "EducationSuperHighway")
testIcons <- iconList(
home = makeIcon("~/Downloads/home.png", 18)
)
testIcons
testIcons[1]
View(testIcons)
testIcons <- iconList(
home = makeIcon("~/Downloads/home.png", 18, 18)
)
testIcons <- iconList(
home = makeIcon("~/Downloads/home.png", 18, 18)
)
leaflet() %>%
setView(lng = -122.4194, lat = 37.7749, zoom = 12) %>% # san francisco
addProviderTiles('CartoDB.Positron') %>%
addMarkers(lng = -122.4017, lat = 37.7930,
icon = ~testIcons("home"),
popup = "EducationSuperHighway")
test <-   data.frame(type = factor(
ifelse(runif(20) > 0.75, "pirate", "ship"),
c("ship", "pirate")
))
test
View(test)
??makeIcon
testIcons <- iconList(
home = makeIcon("~/Downloads/home.png")#, 18, 18)
)
leaflet() %>%
setView(lng = -122.4194, lat = 37.7749, zoom = 12) %>% # san francisco
addProviderTiles('CartoDB.Positron') %>%
addMarkers(lng = -122.4017, lat = 37.7930,
icon = ~testIcons("home"),
popup = "EducationSuperHighway")
leaflet() %>%
setView(lng = -122.4194, lat = 37.7749, zoom = 12) %>% # san francisco
addProviderTiles('CartoDB.Positron') %>%
addMarkers(lng = -122.4017, lat = 37.7930,
icon = ~testIcons(home),
popup = "EducationSuperHighway")
leaflet() %>%
setView(lng = -122.4194, lat = 37.7749, zoom = 12) %>% # san francisco
addProviderTiles('CartoDB.Positron')
testIcons <- iconList(
home = makeIcon("~/Downloads/home.png", "~/Downloads/home.png", 18, 18)
)
leaflet() %>%
setView(lng = -122.4194, lat = 37.7749, zoom = 12) %>% # san francisco
addProviderTiles('CartoDB.Positron') %>%
addMarkers(lng = -122.4017, lat = 37.7930,
icon = ~testIcons("home"),
popup = "EducationSuperHighway")
df <- sp::SpatialPointsDataFrame(
cbind(
(runif(20) - .5) * 10 - 90.620130,  # lng
(runif(20) - .5) * 3.8 + 25.638077  # lat
),
data.frame(type = factor(
ifelse(runif(20) > 0.75, "home", "home"),
c("home", "home")
))
)
df <- sp::SpatialPointsDataFrame(
cbind(
(runif(20) - .5) * 10 - 90.620130,  # lng
(runif(20) - .5) * 3.8 + 25.638077  # lat
),
data.frame(type = "home")
)
df <- sp::SpatialPointsDataFrame(
cbind(
(runif(20) - .5) * 10 - 90.620130,  # lng
(runif(20) - .5) * 3.8 + 25.638077  # lat
),
data.frame(type = factor(
ifelse(runif(20) > 0.75, "home", "not")))
)
leaflet(df) %>% addTiles() %>%
# Select from oceanIcons based on df$type
addMarkers(icon = ~oceanIcons[type])
leaflet(df) %>% addTiles() %>%
# Select from oceanIcons based on df$type
addMarkers(icon = ~testIcons[type])
leaflet() %>%
setView(lng = -122.4194, lat = 37.7749, zoom = 12) %>% # san francisco
addProviderTiles('CartoDB.Positron') %>%
addMarkers(lng = -122.4017, lat = 37.7930,
icon = ~testIcons("home"),
popup = "EducationSuperHighway")
leaflet() %>%
setView(lng = -122.4194, lat = 37.7749, zoom = 12) %>% # san francisco
addProviderTiles('CartoDB.Positron') %>%
addMarkers(lng = -122.4017, lat = 37.7930,
icon = ~testIcons["home"],
popup = "EducationSuperHighway")
leaflet() %>%
setView(lng = -122.4194, lat = 37.7749, zoom = 12) %>% # san francisco
addProviderTiles('CartoDB.Positron') %>%
addMarkers(lng = -122.4017, lat = 37.7930,
icon = ~testIcons[home],
popup = "EducationSuperHighway")
View(df)
??leaflet
df <- as.data.frame(df)
leaflet(df) %>% addTiles() %>%
# Select from oceanIcons based on df$type
addMarkers(icon = ~testIcons[type])
View(df)
View(df)
names(df) <- c("type", "longitude", "lagitude")
leaflet(df) %>% addTiles() %>%
# Select from oceanIcons based on df$type
addMarkers(icon = ~testIcons[type])
names(df) <- c("type", "longitude", "latitude")
names(df) <- c("type", "longitude", "lagitude")
names(df) <- c("type", "longitude", "latitude")
leaflet(df) %>% addTiles() %>%
# Select from oceanIcons based on df$type
addMarkers(icon = ~testIcons[type])
df <- c("home", -122.4017, 37.7930)
names(df) <- c("type", "lng", "lat")
df
df <- as.data.frame(c("home", -122.4017, 37.7930))
View(df)
df <- as.data.frame("home", -122.4017, 37.7930))
df <- as.data.frame("home", -122.4017, 37.7930)
View(df)
df <- as.data.frame(c("home", -122.4017, 37.7930))
df <- melt(df)
df <- as.data.frame(c("home", -122.4017, 37.7930))
View(df)
View(df)
df <- c()
df$type <- "home"
df$lng <- -122
df$lat <- 37.
df$lat <- 37.7
names(df) <- c("type", "lng", "lat")
df <- as.data.frame(df)
View(df)
f <-
leaflet() %>%
setView(lng = -122.4194, lat = 37.7749, zoom = 12) %>% # san francisco
addProviderTiles('CartoDB.Positron') %>%
addMarkers(df,
#lng = -122.4017, lat = 37.7930,
icon = ~testIcons[type],
popup = "EducationSuperHighway")
leaflet() %>%
setView(lng = -122.4194, lat = 37.7749, zoom = 12) %>% # san francisco
addProviderTiles('CartoDB.Positron') %>%
addMarkers(
#lng = -122.4017, lat = 37.7930,
icon = ~testIcons[type],
popup = "EducationSuperHighway")
leaflet() %>%
setView(lng = -122.4194, lat = 37.7749, zoom = 12) %>% # san francisco
addProviderTiles('CartoDB.Positron') %>%
addMarkers(
#lng = -122.4017, lat = 37.7930,
icon = ~testIcons[df$type],
popup = "EducationSuperHighway")
shiny::runApp('Desktop/ficher/Shiny Demo')
runApp('Desktop/ficher/Shiny Demo')
runApp('Desktop/ficher/Shiny Demo')
runApp('Desktop/ficher/Shiny Demo')
runApp('Desktop/ficher/Shiny Demo')
runApp('Desktop/ficher/Shiny Demo')
runApp('Desktop/ficher/Shiny Demo')
runApp('Desktop/ficher/Shiny Demo')
runApp('Desktop/ficher/Shiny Demo')
runApp('Desktop/ficher/Shiny Demo')
runApp('Desktop/ficher/Shiny')
runApp('Desktop/ficher/Shiny')
runApp('Desktop/ficher/Shiny Demo')
runApp('Desktop/ficher/Shiny Demo')
runApp('Desktop/ficher/Shiny Demo')
runApp('Desktop/ficher/Shiny Demo')
runApp('Desktop/ficher/Shiny Demo')
runApp('Desktop/ficher/Shiny')
shiny::runApp('Desktop/ficher/Shiny Demo')
font_import(pattern="MuseoSlabW01-700")
font_import(paths = "~/.fonts" pattern="MuseoSlabW01-700")
font_import(paths = "~/.fonts", pattern="MuseoSlabW01-700")
font_import(paths = "~/.fonts" pattern="MuseoSlab")
font_import(pattern="[M/m]useo[S/s]labW01-700")
font_import(pattern="MuseoSlab")
library(extrafontdb)
font_import(pattern="[M/m]useo[S/s]labW01-700")
library(extrafont)
font_import(pattern="[M/m]useo[S/s]labW01-700")
font_import(pattern="[M/m]useo[S/s]labW01-700")
font_import(pattern="[M/m]useo[S/s]labW01-500")
font_import(pattern="[M/m]useo[S/s]labW01-700")
font_import(pattern="[M/m]useo[S/s]labW01-700")
shiny::runApp('Desktop/ficher/Shiny')
runApp('Desktop/ficher/Shiny')
wd <- "~/Desktop/ficher/Shiny/prep_for_Shiny"
setwd(wd)
discounts <- read.csv("district_discount_rates_20160414.csv", as.is = TRUE)
View(discounts)
districts <- read.csv("deluxe_districts_20160711.csv", as.is = TRUE)
# Clear the console
cat("\014")
# Remove every object in the environment
rm(list = ls())
lib <- c("dplyr", "shiny", "shinyBS", "tidyr", "ggplot2", "scales", "grid", "maps", "ggmap", "ggvis")
#sapply(lib, function(x) install.packages(x))
sapply(lib, function(x) require(x, character.only = TRUE))
wd <- "~/Desktop/ficher/Shiny/prep_for_Shiny"
setwd(wd)
services <- read.csv("services_received_20160711.csv", as.is = TRUE)
districts <- read.csv("deluxe_districts_20160711.csv", as.is = TRUE)
discounts <- read.csv("district_discount_rates_20160414.csv", as.is = TRUE)
usac_matrix <- read.csv("usac_discount_matrix.csv", as.is = TRUE)
schools_needing_wan <- read.csv("schools_needing_wan_20160624.csv", as.is = TRUE)
services <- services %>%
filter(shared_service == "District-dedicated" &
dirty_status == "include clean" & exclude == "FALSE" & exclude_from_analysis == "FALSE")
