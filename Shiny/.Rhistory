# Clear the console
cat("\014")
# Remove every object in the environment
rm(list = ls())
#install and load packages
lib <- c("dplyr", "ggplot2", "gridExtra", "reshape2", "scales", "tidyr")
sapply(lib, function(x) require(x, character.only = TRUE))
ifelse(usage == 'One-to-One', 1, ifelse(usage == 'Moderate'), 0.7, 1.33)
felse(usage == 'One-to-One', 1, ifelse(usage == 'Moderate'), 0.7,
ifelse(usage == 'Media-Rich', 1.33, 'Error')
ifelse(usage == 'One-to-One', 1, ifelse(usage == 'Moderate', 0.7,
ifelse(usage == 'Media-Rich', 1.33, 'Error'))
ifelse(usage == 'One-to-One', 1, ifelse(usage == 'Moderate', 0.7,
ifelse(usage == 'Media-Rich', 1.33, 'Error')))
usage <- 'hmm'
# adjust usage based on bandwidth needs
ifelse(usage == 'One-to-One', 1, ifelse(usage == 'Moderate', 0.7,
ifelse(usage == 'Media-Rich', 1.33, 'Error')))
ifelse(usage == 'One-to-One', 1, ifelse(usage == 'Moderate', 0.7,
ifelse(usage == 'Media-Rich', 1.33, 'Error')))
usage <- 'Moderate'
# adjust usage based on bandwidth needs
ifelse(usage == 'One-to-One', 1, ifelse(usage == 'Moderate', 0.7,
ifelse(usage == 'Media-Rich', 1.33, 'Error')))
locale <- 'Rural'
avg_cost_per_mile <- ifelse(locale == 'Rural', 52000,
ifelse(locale == 'Small Town', 68500,
ifelse(locale %in% c('Suburban', 'Urban'), 88500, 'Error')))
ifelse(locale == 'Rural', 52000,
ifelse(locale == 'Small Town', 68500,
ifelse(locale %in% c('Suburban', 'Urban'), 88500, 'Error')))
ifelse(locale == 'Rural', 12,
ifelse(locale == 'Small Town', 6,
ifelse(locale %in% c('Suburban', 'Urban'), 1, 'Error')))
ifelse(district_size == 'Tiny', 1,
ifelse(district_size == 'Small', 1,
ifelse(district_size == 'Medium', 1.5,
ifelse(district_size == 'Large', 2,
ifelse(district_size == 'Mega', 2.75, 'Error')))))
ifelse(district_size == 'Tiny', 1,
ifelse(district_size == 'Small', 1,
ifelse(district_size == 'Medium', 1.5,
ifelse(district_size == 'Large', 2,
ifelse(district_size == 'Mega', 2.75, 'Error')))))
district_size <- 'Tiny'
ifelse(district_size == 'Tiny', 1,
ifelse(district_size == 'Small', 1,
ifelse(district_size == 'Medium', 1.5,
ifelse(district_size == 'Large', 2,
ifelse(district_size == 'Mega', 2.75, 'Error')))))
shiny::runApp('Google Drive/github/ficher/Shiny')
shiny::runApp('Google Drive/github/ficher/Shiny')
shiny::runApp('Google Drive/github/ficher/Shiny')
shiny::runApp()
runApp()
install.packages("shinydashboard")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
