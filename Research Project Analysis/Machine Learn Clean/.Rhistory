text(x = 19, y = .5, labels = mylabel)
plot(merge_fiber40sIA$"Mbps.Down.Speed",merge_fiber40sIA$cost_per_mbps, main="Rural Fiber Internet Access", pch=16, log="xy", xlim=c(0.01, 100000), ylim=c(0.01, 100000), col="springgreen4")
abline(powerfit_fiber40sIA, untf=FALSE, col="springgreen4")
mylabel = bquote(italic(R)^2 == .(format(summary(powerfit_fiber40sIA)$adj.r.squared, digits = 3)))
text(x = 19, y = .5, labels = mylabel)
plot(merge_cable40sIA$"Mbps.Down.Speed",merge_cable40sIA$cost_per_mbps, main="Rural Cable Internet Access", pch=16, log="xy", xlim=c(0.01, 100000), ylim=c(0.01, 100000), col="turquoise4")
abline(powerfit_cable40sIA, untf=FALSE, col="turquoise4")
mylabel = bquote(italic(R)^2 == .(format(summary(powerfit_cable40sIA)$adj.r.squared, digits = 3)))
text(x = 19, y = .5, labels = mylabel)
plot(merge_dsl40sIA$"Mbps.Down.Speed",merge_dsl40sIA$cost_per_mbps, main="Rural Dsl Internet Access", pch=16, log="xy", xlim=c(0.01, 100000), ylim=c(0.01, 100000), col="maroon3")
abline(powerfit_dsl40sIA, untf=FALSE, col="maroon3")
mylabel = bquote(italic(R)^2 == .(format(summary(powerfit_dsl40sIA)$adj.r.squared, digits = 3)))
text(x = 19, y = .5, labels = mylabel)
--plot connect types
dev.off()
par(mfrow=c(1,3))
plot(merge_dslIA$"Mbps.Down.Speed",merge_dslIA$cost_per_mbps, main="Rural Dsl Internet Access", pch=16, log="xy", xlim=c(0.01, 100000), ylim=c(0.01, 100000), col="maroon3")
abline(powerfit_dslIA, untf=FALSE, col="maroon3")
mylabel = bquote(italic(R)^2 == .(format(summary(powerfit_dslIA)$adj.r.squared, digits = 3)))
text(x = 19, y = .5, labels = mylabel)
dev.off()
par(mfrow=c(1,3))
plot(merge_fiberIA$"Mbps.Down.Speed",merge_fiber40sIA$cost_per_mbps, main="Fiber Internet Access", pch=16, log="xy", xlim=c(0.01, 100000), ylim=c(0.01, 100000), col="springgreen4")
abline(powerfit_fiberIA, untf=FALSE, col="springgreen4")
mylabel = bquote(italic(R)^2 == .(format(summary(powerfit_fiberIA)$adj.r.squared, digits = 3)))
text(x = 19, y = .5, labels = mylabel)
plot(merge_cableIA$"Mbps.Down.Speed",merge_cable40sIA$cost_per_mbps, main="Cable Internet Access", pch=16, log="xy", xlim=c(0.01, 100000), ylim=c(0.01, 100000), col="turquoise4")
abline(powerfit_cableIA, untf=FALSE, col="turquoise4")
mylabel = bquote(italic(R)^2 == .(format(summary(powerfit_cableIA)$adj.r.squared, digits = 3)))
text(x = 19, y = .5, labels = mylabel)
plot(merge_dslIA$"Mbps.Down.Speed",merge_dslIA$cost_per_mbps, main="Dsl Internet Access", pch=16, log="xy", xlim=c(0.01, 100000), ylim=c(0.01, 100000), col="maroon3")
abline(powerfit_dslIA, untf=FALSE, col="maroon3")
mylabel = bquote(italic(R)^2 == .(format(summary(powerfit_dslIA)$adj.r.squared, digits = 3)))
text(x = 19, y = .5, labels = mylabel)
dev.off()
par(mfrow=c(1,3))
plot(merge_fiberIA$"Mbps.Down.Speed",merge_fiberIA$cost_per_mbps, main="Fiber Internet Access", pch=16, log="xy", xlim=c(0.01, 100000), ylim=c(0.01, 100000), col="springgreen4")
abline(powerfit_fiberIA, untf=FALSE, col="springgreen4")
mylabel = bquote(italic(R)^2 == .(format(summary(powerfit_fiberIA)$adj.r.squared, digits = 3)))
text(x = 19, y = .5, labels = mylabel)
plot(merge_cableIA$"Mbps.Down.Speed",merge_cableIA$cost_per_mbps, main="Cable Internet Access", pch=16, log="xy", xlim=c(0.01, 100000), ylim=c(0.01, 100000), col="turquoise4")
abline(powerfit_cableIA, untf=FALSE, col="turquoise4")
mylabel = bquote(italic(R)^2 == .(format(summary(powerfit_cableIA)$adj.r.squared, digits = 3)))
text(x = 19, y = .5, labels = mylabel)
plot(merge_dslIA$"Mbps.Down.Speed",merge_dslIA$cost_per_mbps, main="Dsl Internet Access", pch=16, log="xy", xlim=c(0.01, 100000), ylim=c(0.01, 100000), col="maroon3")
abline(powerfit_dslIA, untf=FALSE, col="maroon3")
mylabel = bquote(italic(R)^2 == .(format(summary(powerfit_dslIA)$adj.r.squared, digits = 3)))
text(x = 19, y = .5, labels = mylabel)
dev.off()
par(mfrow=c(1,3))
plot(merge_fiberIA$"Mbps.Down.Speed",merge_fiberIA$cost_per_mbps, main="Fiber Internet Access", pch=16, log="xy", xlim=c(0.01, 100000), ylim=c(0.01, 100000), col="springgreen4")
abline(powerfit_fiberIA, untf=FALSE, col="springgreen4")
points(merge_cableIA$"Mbps.Down.Speed",merge_cableIA$cost_per_mbps, main="Cable Internet Access", pch=16, col="turquoise4")
abline(powerfit_cableIA, untf=FALSE, col="turquoise4")
points(merge_dslIA$"Mbps.Down.Speed",merge_dslIA$cost_per_mbps, main="Dsl Internet Access", pch=16, log="xy", col="maroon3")
abline(powerfit_dslIA, untf=FALSE, col="maroon3")
dev.off()
par(mfrow=c(1,3))
plot(merge_fiberIA$"Mbps.Down.Speed",merge_fiberIA$cost_per_mbps, main="Fiber Internet Access", pch=16, log="xy", xlim=c(0.01, 100000), ylim=c(0.01, 100000), col="springgreen4")
abline(powerfit_fiberIA, untf=FALSE, col="springgreen4")
points(merge_cableIA$"Mbps.Down.Speed",merge_cableIA$cost_per_mbps, main="Cable Internet Access", pch=16, col="turquoise4")
abline(powerfit_cableIA, untf=FALSE, col="turquoise4")
points(merge_dslIA$"Mbps.Down.Speed",merge_dslIA$cost_per_mbps, main="Dsl Internet Access", pch=16, log="xy", col="maroon3")
abline(powerfit_dslIA, untf=FALSE, col="maroon3")
q()
usac2015 = read.csv("usac2015_31_3.csv", header=TRUE, sep="|")
usac2015$qty_bdwdth <- (usac2015$"No..of.Lines"*usac2015$"Mbps.Down.Speed")
usac2015$cost_per_mbps <- ifelse(usac2015$qty_bdwdth == 0, 0, (usac2015$"Total.Cost"/12/usac2015$qty_bdwdth))
usac2015$lny <- log10(usac2015$cost_per_mbps)
usac2015$lnx <- log10(usac2015$"Mbps.Down.Speed")
mergeIA <- usac2015[(usac2015$"Purpose"=="Internet"),]
mergeIA <- mergeIA[rowSums(is.na(mergeIA)) == 0,]
merge_fiberIA <- mergeIA[mergeIA$"Connect.Type"=="Lit Fiber Service" | mergeIA$"Connect.Type"=="OC-N",]
merge_cableIA <- mergeIA[mergeIA$"Connect.Type"=="Cable Modem",]
merge_dslIA <- mergeIA[mergeIA$"Connect.Type"=="Digital Subscriber Line (DSL)",]
merge_t1IA <- mergeIA[mergeIA$"Connect.Type"=="DS-1 (T-1)",]
merge_t3IA <- mergeIA[mergeIA$"Connect.Type"=="DS-3 (T-3)",]
merge_darkfiberIA <- mergeIA[mergeIA$"Connect.Type"=="Dark Fiber Service",]
merge_wirelessIA <- mergeIA[mergeIA$"Connect.Type"=="E.g., Microwave Service",]
merge10sIA <- usac2015[((usac2015$locale==11 | usac2015$locale==12 | usac2015$locale==13) & usac2015$"Purpose"=="Internet"),]
merge20sIA <- usac2015[((usac2015$locale==21 | usac2015$locale==22 | usac2015$locale==23) & usac2015$"Purpose"=="Internet"),]
merge30sIA <- usac2015[((usac2015$locale==31 | usac2015$locale==32 | usac2015$locale==33) & usac2015$"Purpose"=="Internet"),]
merge40sIA <- usac2015[((usac2015$locale==41 | usac2015$locale==42 | usac2015$locale==43) & usac2015$"Purpose"=="Internet"),]
merge41IA <- usac2015[(usac2015$locale==41 & usac2015$"Purpose"=="Internet"),]
merge42IA <- usac2015[(usac2015$locale==42 & usac2015$"Purpose"=="Internet"),]
merge43IA <- usac2015[(usac2015$locale==43& usac2015$"Purpose"=="Internet"),]
merge_urbanIA <- rbind(merge10sIA, merge20sIA)
merge_subtwnIA <- rbind(merge30sIA, merge20sIA)
merge_ruralIA <- rbind(merge30sIA, merge40sIA)
merge_fiber10sIA <- merge10sIA[merge10sIA$"Connect.Type"=="Lit Fiber Service" | merge10sIA$"Connect.Type"=="OC-N",]
merge_cable10sIA <- merge10sIA[merge10sIA$"Connect.Type"=="Cable Modem",]
merge_dsl10sIA <- merge10sIA[merge10sIA$"Connect.Type"=="Digital Subscriber Line (DSL)",]
merge_t110sIA <- merge10sIA[merge10sIA$"Connect.Type"=="DS-1 (T-1)",]
merge_fiber20sIA <- merge20sIA[merge20sIA$"Connect.Type"=="Lit Fiber Service" | merge20sIA$"Connect.Type"=="OC-N",]
merge_cable20sIA <- merge20sIA[merge20sIA$"Connect.Type"=="Cable Modem",]
merge_t120sIA <- merge20sIA[merge20sIA$"Connect.Type"=="DS-1 (T-1)",]
merge_fiber30sIA <- merge30sIA[merge30sIA$"Connect.Type"=="Lit Fiber Service" | merge30sIA$"Connect.Type"=="OC-N",]
merge_cable30sIA <- merge30sIA[merge30sIA$"Connect.Type"=="Cable Modem",]
merge_dsl30sIA <- merge30sIA[merge30sIA$"Connect.Type"=="Digital Subscriber Line (DSL)",]
merge_t130sIA <- merge30sIA[merge30sIA$"Connect.Type"=="DS-1 (T-1
merge_darkfiber30sIA <- merge30sIA[merge30sIA$"Connect.Type"=="Dark Fiber Service",]
merge_wireless30sIA <- merge30sIA[merge30sIA$"Connect.Type"=="E.g., Microwave Service",]
merge_fiber40sIA <- merge40sIA[merge40sIA$"Connect.Type"=="Lit Fiber Service" | merge40sIA$"Connect.Type"=="OC-N",]
merge_cable40sIA <- merge40sIA[merge40sIA$"Connect.Type"=="Cable Modem",]
merge_dsl40sIA <- merge40sIA[merge40sIA$"Connect.Type"=="Digital Subscriber Line (DSL)",]
merge_t140sIA <- merge40sIA[merge40sIA$"Connect.Type"=="DS-1 (T-1)",]
merge_t340sIA <- merge40sIA[merge40sIA$"Connect.Type"=="DS-3 (T-3)",]
merge_darkfiber40sIA <- merge40sIA[merge40sIA$"Connect.Type"=="Dark Fiber Service",]
merge_wireless40sIA <- merge40sIA[merge40sIA$"Connect.Type"=="E.g., Microwave Service",]
merge10sIA <- merge10sIA[rowSums(is.na(merge10sIA)) == 0,]
merge20sIA <- merge20sIA[rowSums(is.na(merge20sIA)) == 0,]
merge30sIA <- merge30sIA[rowSums(is.na(merge30sIA)) == 0,]
merge40sIA <- merge40sIA[rowSums(is.na(merge40sIA)) == 0,]
merge41IA <- merge41IA[rowSums(is.na(merge41IA)) == 0,]
merge42IA <- merge42IA[rowSums(is.na(merge42IA)) == 0,]
merge43IA <- merge43IA[rowSums(is.na(merge43IA)) == 0,]
merge_urbanIA <- merge_urbanIA[rowSums(is.na(merge_urbanIA)) == 0,]
merge_subtwnIA <- merge_subtwnIA[rowSums(is.na(merge_subtwnIA)) == 0,]
merge_ruralIA <- merge_ruralIA[rowSums(is.na(merge_ruralIA)) == 0,]
merge_fiber10sIA <- merge_fiber10sIA[rowSums(is.na(merge_fiber10sIA)) == 0,]
merge_cable10sIA <- merge_cable10sIA[rowSums(is.na(merge_cable10sIA)) == 0,]
merge_dsl10sIA <- merge_dsl10sIA[rowSums(is.na(merge_dsl10sIA)) == 0,]
merge_t110sIA <- merge_t110sIA[rowSums(is.na(merge_t110sIA)) == 0,]
merge_fiber20sIA <- merge_fiber20sIA[rowSums(is.na(merge_fiber20sIA)) == 0,]
merge_cable20sIA <- merge_cable20sIA[rowSums(is.na(merge_cable20sIA)) == 0,]
merge_t120sIA <- merge_t120sIA[rowSums(is.na(merge_t120sIA)) == 0,]
merge_fiber30sIA <- merge_fiber30sIA[rowSums(is.na(merge_fiber30sIA)) == 0,]
merge_cable30sIA <- merge_cable30sIA[rowSums(is.na(merge_cable30sIA)) == 0,]
merge_dsl30sIA <- merge_dsl30sIA[rowSums(is.na(merge_dsl30sIA)) == 0,]
merge_t130sIA <- merge_t130sIA[rowSums(is.na(merge_t130sIA)) == 0,]
merge_darkfiber30sIA <- merge_darkfiber30sIA[rowSums(is.na(merge_darkfiber30sIA)) == 0,]
merge_wireless30sIA <- merge_wireless30sIA[rowSums(is.na(merge_wireless30sIA)) == 0,]
merge_fiber40sIA <- merge_fiber40sIA[rowSums(is.na(merge_fiber40sIA)) == 0,]
merge_cable40sIA <- merge_cable40sIA[rowSums(is.na(merge_cable40sIA)) == 0,]
merge_dsl40sIA <- merge_dsl40sIA[rowSums(is.na(merge_dsl40sIA)) == 0,]
merge_t140sIA <- merge_t140sIA[rowSums(is.na(merge_t140sIA)) == 0,]
merge_t340sIA <- merge_t340sIA[rowSums(is.na(merge_t340sIA)) == 0,]
merge_darkfiber40sIA <- merge_darkfiber40sIA[rowSums(is.na(merge_darkfiber40sIA)) == 0,]
merge_wireless40sIA <- merge_wireless40sIA[rowSums(is.na(merge_wireless40sIA)) == 0,]
merge_t130sIA <- merge30sIA[merge30sIA$"Connect.Type"=="DS-1 (T-1)",]
merge_darkfiber30sIA <- merge30sIA[merge30sIA$"Connect.Type"=="Dark Fiber Service",]
merge_wireless30sIA <- merge30sIA[merge30sIA$"Connect.Type"=="E.g., Microwave Service",]
merge_fiber40sIA <- merge40sIA[merge40sIA$"Connect.Type"=="Lit Fiber Service" | merge40sIA$"Connect.Type"=="OC-N",]
merge_cable40sIA <- merge40sIA[merge40sIA$"Connect.Type"=="Cable Modem",]
merge_dsl40sIA <- merge40sIA[merge40sIA$"Connect.Type"=="Digital Subscriber Line (DSL)",]
merge_t140sIA <- merge40sIA[merge40sIA$"Connect.Type"=="DS-1 (T-1)",]
merge_t340sIA <- merge40sIA[merge40sIA$"Connect.Type"=="DS-3 (T-3)",]
merge_darkfiber40sIA <- merge40sIA[merge40sIA$"Connect.Type"=="Dark Fiber Service",]
merge_wireless40sIA <- merge40sIA[merge40sIA$"Connect.Type"=="E.g., Microwave Service",]
merge10sIA <- merge10sIA[rowSums(is.na(merge10sIA)) == 0,]
merge20sIA <- merge20sIA[rowSums(is.na(merge20sIA)) == 0,]
merge30sIA <- merge30sIA[rowSums(is.na(merge30sIA)) == 0,]
merge40sIA <- merge40sIA[rowSums(is.na(merge40sIA)) == 0,]
merge41IA <- merge41IA[rowSums(is.na(merge41IA)) == 0,]
merge42IA <- merge42IA[rowSums(is.na(merge42IA)) == 0,]
merge43IA <- merge43IA[rowSums(is.na(merge43IA)) == 0,]
merge_urbanIA <- merge_urbanIA[rowSums(is.na(merge_urbanIA)) == 0,]
merge_subtwnIA <- merge_subtwnIA[rowSums(is.na(merge_subtwnIA)) == 0,]
merge_ruralIA <- merge_ruralIA[rowSums(is.na(merge_ruralIA)) == 0,]
merge_fiber10sIA <- merge_fiber10sIA[rowSums(is.na(merge_fiber10sIA)) == 0,]
merge_cable10sIA <- merge_cable10sIA[rowSums(is.na(merge_cable10sIA)) == 0,]
merge_dsl10sIA <- merge_dsl10sIA[rowSums(is.na(merge_dsl10sIA)) == 0,]
merge_t110sIA <- merge_t110sIA[rowSums(is.na(merge_t110sIA)) == 0,]
merge_fiber20sIA <- merge_fiber20sIA[rowSums(is.na(merge_fiber20sIA)) == 0,]
merge_cable20sIA <- merge_cable20sIA[rowSums(is.na(merge_cable20sIA)) == 0,]
merge_t120sIA <- merge_t120sIA[rowSums(is.na(merge_t120sIA)) == 0,]
merge_fiber30sIA <- merge_fiber30sIA[rowSums(is.na(merge_fiber30sIA)) == 0,]
merge_cable30sIA <- merge_cable30sIA[rowSums(is.na(merge_cable30sIA)) == 0,]
merge_dsl30sIA <- merge_dsl30sIA[rowSums(is.na(merge_dsl30sIA)) == 0,]
merge_t130sIA <- merge_t130sIA[rowSums(is.na(merge_t130sIA)) == 0,]
merge_darkfiber30sIA <- merge_darkfiber30sIA[rowSums(is.na(merge_darkfiber30sIA)) == 0,]
merge_wireless30sIA <- merge_wireless30sIA[rowSums(is.na(merge_wireless30sIA)) == 0,]
merge_fiber40sIA <- merge_fiber40sIA[rowSums(is.na(merge_fiber40sIA)) == 0,]
merge_cable40sIA <- merge_cable40sIA[rowSums(is.na(merge_cable40sIA)) == 0,]
merge_dsl40sIA <- merge_dsl40sIA[rowSums(is.na(merge_dsl40sIA)) == 0,]
merge_t140sIA <- merge_t140sIA[rowSums(is.na(merge_t140sIA)) == 0,]
merge_t340sIA <- merge_t340sIA[rowSums(is.na(merge_t340sIA)) == 0,]
merge_darkfiber40sIA <- merge_darkfiber40sIA[rowSums(is.na(merge_darkfiber40sIA)) == 0,]
merge_wireless40sIA <- merge_wireless40sIA[rowSums(is.na(merge_wireless40sIA)) == 0,]
powerfit_IA <- lm(mergeIA$lny ~ mergeIA$lnx, data=mergeIA)
powerfit_fiberIA <- lm(merge_fiberIA$lny ~ merge_fiberIA$lnx, data=merge_fiberIA)
powerfit_cableIA <- lm(merge_cableIA$lny ~ merge_cableIA$lnx, data=merge_cableIA)
powerfit_dslIA <- lm(merge_dslIA$lny ~ merge_dslIA$lnx, data=merge_dslIA)
powerfit_t1IA <- lm(merge_t1IA$lny ~ merge_t1IA$lnx, data=merge_t1IA)
powerfit_t3IA <- lm(merge_t3IA$lny ~ merge_t3IA$lnx, data=merge_t3IA)
powerfit_darkfiberIA <- lm(merge_darkfiberIA$lny ~ merge_darkfiberIA$lnx, data=merge_darkfiberIA)
powerfit_wirelessIA <- lm(merge_wirelessIA$lny ~ merge_wirelessIA$lnx, data=merge_wirelessIA)
powerfit10sIA <- lm(merge10sIA$lny ~ merge10sIA$lnx, data=merge10sIA)
powerfit20sIA <- lm(merge20sIA$lny ~ merge20sIA$lnx, data=merge20sIA)
powerfit30sIA <- lm(merge30sIA$lny ~ merge30sIA$lnx, data=merge30sIA)
powerfit40sIA <- lm(merge40sIA$lny ~ merge40sIA$lnx, data=merge40sIA)
powerfit41IA <- lm(merge41IA$lny ~ merge41IA$lnx, data=merge41IA)
powerfit42IA <- lm(merge42IA$lny ~ merge42IA$lnx, data=merge42IA)
powerfit43IA <- lm(merge43IA$lny ~ merge43IA$lnx, data=merge43IA)
powerfit_urbanIA <- lm(merge_urbanIA$lny ~ merge_urbanIA$lnx, data=merge_urbanIA)
powerfit_subtwnIA <- lm(merge_subtwnIA$lny ~ merge_subtwnIA$lnx, data=merge_subtwnIA)
powerfit_ruralIA <- lm(merge_ruralIA$lny ~ merge_ruralIA$lnx, data=merge_ruralIA)
powerfit_fiber10sIA <- lm(merge_fiber10sIA$lny ~ merge_fiber10sIA$lnx, data=merge_fiber10sIA)
powerfit_cable10sIA <- lm(merge_cable10sIA$lny ~ merge_cable10sIA$lnx, data=merge_cable10sIA)
powerfit_dsl10sIA <- lm(merge_dsl10sIA$lny ~ merge_dsl10sIA$lnx, data=merge_dsl10sIA)
powerfit_t110sIA <- lm(merge_t110sIA$lny ~ merge_t110sIA$lnx, data=merge_t110sIA)
powerfit_fiber20sIA <- lm(merge_fiber20sIA$lny ~ merge_fiber20sIA$lnx, data=merge_fiber20sIA)
powerfit_cable20sIA <- lm(merge_cable20sIA$lny ~ merge_cable20sIA$lnx, data=merge_cable20sIA)
powerfit_t120sIA <- lm(merge_t120sIA$lny ~ merge_t120sIA$lnx, data=merge_t120sIA)
powerfit_fiber30sIA <- lm(merge_fiber30sIA$lny ~ merge_fiber30sIA$lnx, data=merge_fiber30sIA)
powerfit_cable30sIA <- lm(merge_cable30sIA$lny ~ merge_cable30sIA$lnx, data=merge_cable30sIA)
powerfit_dsl30sIA <- lm(merge_dsl30sIA$lny ~ merge_dsl30sIA$lnx, data=merge_dsl30sIA)
powerfit_t130sIA <- lm(merge_t130sIA$lny ~ merge_t130sIA$lnx, data=merge_t130sIA)
powerfit_darkfiber30sIA <- lm(merge_darkfiber30sIA$lny ~ merge_darkfiber30sIA$lnx, data=merge_darkfiber30sIA)
powerfit_wireless30sIA <- lm(merge_wireless30sIA$lny ~ merge_wireless30sIA$lnx, data=merge_wireless30sIA)
powerfit_fiber40sIA <- lm(merge_fiber40sIA$lny ~ merge_fiber40sIA$lnx, data=merge_fiber40sIA)
powerfit_cable40sIA <- lm(merge_cable40sIA$lny ~ merge_cable40sIA$lnx, data=merge_cable40sIA)
powerfit_dsl40sIA <- lm(merge_dsl40sIA$lny ~ merge_dsl40sIA$lnx, data=merge_dsl40sIA)
powerfit_t140sIA <- lm(merge_t140sIA$lny ~ merge_t140sIA$lnx, data=merge_t140sIA)
powerfit_t340sIA <- lm(merge_t340sIA$lny ~ merge_t340sIA$lnx, data=merge_t340sIA)
powerfit_darkfiber40sIA <- lm(merge_darkfiber40sIA$lny ~ merge_darkfiber40sIA$lnx, data=merge_darkfiber40sIA)
powerfit_wireless40sIA <- lm(merge_wireless40sIA$lny ~ merge_wireless40sIA$lnx, data=merge_wireless40sIA)
q()
install.packages("RPostgreSQL")
library("RPostgreSQL", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("RPostgreSQL")
install.packages("sqldf")
library(sqldf)
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = "daddkut7s5671q",
host = "ec2-54-204-38-194.compute-1.amazonaws.com", port = 5572,
user = "u3v583a3p2pp85", password = "p6omsea0tv60mlfjnosesb7ereu")
con <- dbConnect(drv, dbname = "daddkut7s5671q",
host = "ec2-54-204-38-194.compute-1.amazonaws.com", port = 5572,
user = "u3v583a3p2pp85", password = "p6omsea0tv60mlfjnosesb7ereu")
con <- dbConnect(drv, dbname = "daddkut7s5671q",
host = "ec2-54-204-38-194.compute-1.amazonaws.com", port = 5572,
user = "u3v583a3p2pp85", password = "p6omsea0tv60mlfjnosesb7ereu")
con <- dbConnect(drv, dbname = "daddkut7s5671q",
host = "ec2-54-204-38-194.compute-1.amazonaws.com", port = 5572,
user = "u3v583a3p2pp85", password = "p6omsea0tv60mlfjnosesb7ereu")
con <- dbConnect(drv, dbname = "daddkut7s5671q",
host = "ec2-54-204-38-194.compute-1.amazonaws.com", port = 5572,
user = "u3v583a3p2pp85", password = "p6omsea0tv60mlfjnosesb7ereu")
library(sqldf)
setwd("~/Desktop/SQL Queries")
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = "daddkut7s5671q",
host = "ec2-54-204-38-194.compute-1.amazonaws.com", port = 5572,
user = "u3v583a3p2pp85", password = "p6omsea0tv60mlfjnosesb7ereu")
host = "ec2-54-204-38-194.compute-1.amazonaws.com", port = 5572,
user = "u3v583a3p2pp85", password = "p6omsea0tv60mlfjnosesb7ereu")
dbListFields(con, "districts")
usac2015 = read.csv("usac2015_31_3.csv", header=TRUE, sep="|")
usac2015$qty_bdwdth <- (usac2015$"No..of.Lines"*usac2015$"Mbps.Down.Speed")
usac2015$cost_per_mbps <- ifelse(usac2015$qty_bdwdth == 0, 0, (usac2015$"Total.Cost"/12/usac2015$qty_bdwdth))
usac2015$lny <- log10(usac2015$cost_per_mbps)
usac2015$lnx <- log10(usac2015$"Mbps.Down.Speed")
mergeIA <- usac2015[(usac2015$"Purpose"=="Internet"),]
mergeIA <- mergeIA[rowSums(is.na(mergeIA)) == 0,]
merge_fiberIA <- mergeIA[mergeIA$"Connect.Type"=="Lit Fiber Service" | mergeIA$"Connect.Type"=="OC-N",]
merge_cableIA <- mergeIA[mergeIA$"Connect.Type"=="Cable Modem",]
merge_dslIA <- mergeIA[mergeIA$"Connect.Type"=="Digital Subscriber Line (DSL)",]
merge_t1IA <- mergeIA[mergeIA$"Connect.Type"=="DS-1 (T-1)",]
merge_t3IA <- mergeIA[mergeIA$"Connect.Type"=="DS-3 (T-3)",]
merge_darkfiberIA <- mergeIA[mergeIA$"Connect.Type"=="Dark Fiber Service",]
merge_wirelessIA <- mergeIA[mergeIA$"Connect.Type"=="E.g., Microwave Service",]
merge10sIA <- usac2015[((usac2015$locale==11 | usac2015$locale==12 | usac2015$locale==13) & usac2015$"Purpose"=="Internet"),]
merge20sIA <- usac2015[((usac2015$locale==21 | usac2015$locale==22 | usac2015$locale==23) & usac2015$"Purpose"=="Internet"),]
merge30sIA <- usac2015[((usac2015$locale==31 | usac2015$locale==32 | usac2015$locale==33) & usac2015$"Purpose"=="Internet"),]
merge40sIA <- usac2015[((usac2015$locale==41 | usac2015$locale==42 | usac2015$locale==43) & usac2015$"Purpose"=="Internet"),]
setwd("C:/Users/Justine/Desktop")
business <- read.table("mydata.csv", header=TRUE, sep=",", row.names="id")
setwd("C:/")
business <- read.table("business.csv", header=TRUE, sep=",", row.names="id")
setwd("C:/Users/Justine/Documents/")"
business <- read.table("business.csv", header=TRUE, sep=",", row.names="id")
setwd("C:/Users/Justine/Documents/")
business <- read.table("business.csv", header=TRUE, sep=",", row.names="id")
business_categories <- read.table("business.csv", header=TRUE, sep=",", row.names="id")
business <- read.table("business.csv", header=TRUE)
business <- read.table("business.csv", header=TRUE, sep=",", row.names="business_id")
business_categories <- read.table("business.csv", header=TRUE, sep=",", row.names="business_id")
view(business)
head(business)
library(sqldf)
business_category_restaurant <- sqldf ("
select *
from business_categories
where catergory = 'Restaurants'
")
business_category_restaurant <- sqldf ("
select *
from business_categories
where "catergory" = 'Restaurants'
")
head(business_categories)
head(business_categories)
summary(business_categories)
""
;
)
sf
summary(business_categories)
csv", header=TRUE, sep=",", row.names="business_id")
business_categories <- read.table("business_categories.csv", header=TRUE, sep=",", row.names="business_id")
business_categories_2 <- read.table("business_categories.csv", header=TRUE, sep=",", row.names="business_id")
business_categories_2 <- read.table("business_categories.csv", header=TRUE, sep=",")
business_category_restaurant <- sqldf ("
select *
from business_categories_2
where "catergory" = 'Restaurants'
")
business_category_restaurant <- sqldf ("
select *
from business_categories_2
where catergory = 'Restaurants'
")
business_category_restaurant <- sqldf ("  select *
from business_categories_2
where catergory = 'Restaurants'")
business_category_restaurant <- sqldf (  select *
from business_categories_2
where catergory = 'Restaurants'
)
business_category_restaurant <- sqldf ('select * from business_categories_2 where catergory = 'Restaurants'')
business_category_restaurant = sqldf ('select * from business_categories_2 where catergory = 'Restaurants'')
business_category_restaurant = sqldf (select * from business_categories_2 where catergory = 'Restaurants')
business_category_restaurant = sqldf (‘select * from business_categories_2 where catergory = 'Restaurants'’)
drv <- dbDriver("PostgreSQL")
setwd("C:/Users/Justine/Documents/GitHub/ficher")
library(class)
library(caret)
library(dplyr)
.libPaths()
library(caret, lib.loc = "C:/Users/Justine/Documents/R/win-library/3.1")
library(caret)
raw <- read.csv('raw_update.csv') # predictors
setwd("C:/Users/Justine/Documents/GitHub/ficher")
raw <- read.csv('raw_update.csv') # predictors
setwd("C:/Users/Justine/Documents/GitHub/ficher/Research Project Analysis/Meeting Goals Prediction")
raw <- read.csv('raw_update.csv') # predictors
ver <- read.csv('verified_update.csv') # outcome
sort(raw$esh_id) == sort(ver$esh_id)
raw <- raw %>% arrange(esh_id)
table(raw$esh_id == ver$esh_id)
class(raw$ia_bandwidth_per_student)
class(ver$ia_bandwidth_per_student)
raw$ia_bandwidth_per_student <- as.numeric(as.character(raw$ia_bandwidth_per_student))
table(raw$ia_bandwidth_per_student == ver$ia_bandwidth_per_student)
ver$ia_bandwidth_per_student <- as.numeric(as.character(ver$ia_bandwidth_per_student))
table(raw$ia_bandwidth_per_student == ver$ia_bandwidth_per_student)
view(raw)
library(sqldf)
library(randomForest)
library(randomForest)
head(raw)
joined <- merge(ver[,c(1,5)], raw, by.x="esh_id", by.y="esh_id")
ary(class)
library(caret)
library(dplyr)
library(sqldf)
library(randomForest)
setwd("C:/Users/Justine/Documents/GitHub/ficher/Research Project Analysis/Meeting Goals Prediction")
raw <- read.csv('raw_update.csv') # predictors
ver <- read.csv('verified_update.csv') # outcome
raw$ia_bandwidth_per_student <- as.numeric(as.character(raw$ia_bandwidth_per_student))
ver$ia_bandwidth_per_student <- as.numeric(as.character(ver$ia_bandwidth_per_student))
joined <- merge(ver[,c(1,5)], raw, by.x="esh_id", by.y="esh_id")
head(joined)
joined$band_diff <- joined$ia_bandwidth_per_student.x - joined$ia_bandwidth_per_student.y
diffs <- joined$band_diff[joined$band_diff != 0]
hist(diffs, col='dodgerblue', border='white', xlab='Diffs in Kbps Per Student', main="Changed Bandwidth Distribution")
mean(diffs, na.rm=T)
table(joined$ia_bandwidth_per_student.x == joined$ia_bandwidth_per_student.y)
joined$meets_goals <- ifelse(joined$ia_bandwidth_per_student.x >= 100, 1, 0)
mean(joined$meets_goals, na.rm=T)
colnames(joined)
joined <- joined[!is.na(joined$meets_goals),]
joined <- joined[!is.na(joined$ia_bandwidth_per_student.y),]
nrow(joined)
library(class)
library(caret)
library(dplyr)
library(sqldf)
library(randomForest)
setwd("C:/Users/Justine/Documents/GitHub/ficher/Research Project Analysis/Meeting Goals Prediction")
raw <- read.csv('raw_update.csv') # predictors
ver <- read.csv('verified_update.csv') # outcome
nrow(raw)
nrow(ver)
raw$ia_bandwidth_per_student <- as.numeric(as.character(raw$ia_bandwidth_per_student))
nrow(raw)
ver$ia_bandwidth_per_student <- as.numeric(as.character(ver$ia_bandwidth_per_student))
nrow(ver)
joined <- merge(ver[,c(1,5)], raw, by.x="esh_id", by.y="esh_id")
nrow(joined)
joined$band_diff <- joined$ia_bandwidth_per_student.x - joined$ia_bandwidth_per_student.y
nrow(joined)
joined$meets_goals <- ifelse(joined$ia_bandwidth_per_student.x >= 100, 1, 0)
nrow(joined)
joined$meets_goals <- ifelse(joined$ia_bandwidth_per_student.x >= 100, 1, 0)
joined <- joined[!is.na(joined$meets_goals),]
nrow(joined)
joined <- joined[!is.na(joined$ia_bandwidth_per_student.y),]
nrow(joined)
data.size <- nrow(joined)
data.size
train.size <- round(data.size *.8, 0)
train.size
dev.size <- data.size - train.size
dev.size
train_vector <- sample(data.size, train.size)
train_vector
connect.forest <- randomForest(as.factor(meets_goals) ~ ia_bandwidth_per_student.y + locale + num_students + num_schools + percentage_fiber, data=joined[train_vector,], importance=T, ntree=501)
summary(connect.forest)
connect.forest$importance
predict.forest <- predict(connect.forest, joined[-train_vector,])
bw_predictions <- data.frame(cbind(predict.forest, joined[-train_vector, 2]))
bw_predictions$diff <- bw_predictions$V2 - bw_predictions$predict.forest
View(bw_predictions)
options(scipen=100)
hist(bw_predictions$diff, col="dodgerblue", xlim=c(-5000,5000), breaks=30)
table(predict.forest)
confusionMatrix(predict.forest, reference=joined[-train_vector, 43])
o
connect.forest$importance
predict.forest <- predict(connect.forest, joined[-train_vector,])
predict.forest
connect.forest <- randomForest(as.numeric(meets_goals) ~ ia_bandwidth_per_student.y + locale + num_students + num_schools + percentage_fiber, data=joined[train_vector,], importance=T, ntree=501)
connect.forest$importance
predict.forest <- predict(connect.forest, joined[-train_vector,])
bw_predictions <- data.frame(cbind(predict.forest, joined[-train_vector, 2]))
bw_predictions$diff <- bw_predictions$V2 - bw_predictions$predict.forest
View(bw_predictions)
print(connect.forest)
connect.forest$importance
predict.forest <- predict(connect.forest, joined[-train_vector,])
importance(connect.forest)
### Predicting Districts Meeting Goals ###
library(class)
library(caret)
library(dplyr)
raw <- read.csv('raw_update.csv') # predictors
ver <- read.csv('verified_update.csv') # outcome
sort(raw$esh_id) == sort(ver$esh_id)
raw <- raw %>% arrange(esh_id)
ver <- ver %>% arrange(esh_id)
table(raw$esh_id == ver$esh_id)
class(raw$ia_bandwidth_per_student)
class(ver$ia_bandwidth_per_student)
raw$ia_bandwidth_per_student <- as.numeric(as.character(raw$ia_bandwidth_per_student))
ver$ia_bandwidth_per_student <- as.numeric(as.character(ver$ia_bandwidth_per_student))
table(raw$ia_bandwidth_per_student == ver$ia_bandwidth_per_student)
colnames(ver)
colnames(raw)
joined <- merge(ver[,c(1,5)], raw, by.x="esh_id", by.y="esh_id")
joined$band_diff <- joined$ia_bandwidth_per_student.x - joined$ia_bandwidth_per_student.y
diffs <- joined$band_diff[joined$band_diff != 0]
hist(diffs, col='dodgerblue', border='white', xlab='Diffs in Kbps Per Student', main="Changed Bandwidth Distribution")
mean(diffs, na.rm=T)
table(joined$ia_bandwidth_per_student.x == joined$ia_bandwidth_per_student.y)
joined$meets_goals <- ifelse(joined$ia_bandwidth_per_student.x >= 100, 1, 0)
mean(joined$meets_goals, na.rm=T)
colnames(joined)
joined <- joined[!is.na(joined$meets_goals),]
joined <- joined[!is.na(joined$ia_bandwidth_per_student.y),]
nrow(joined)
### Validation Set ###
data.size <- nrow(joined)
train.size <- round(data.size *.8, 0)
dev.size <- data.size - train.size
train_vector <- sample(data.size, train.size)
### Model ###
library(randomForest)
connect.forest <- randomForest(as.factor(meets_goals) ~ ia_bandwidth_per_student.y + locale + num_students + num_schools + percentage_fiber, data=joined[train_vector,], importance=T, ntree=501)
connect.forest <- randomForest(as.numeric(ia_bandwidth_per_student.x) ~ ia_bandwidth_per_student.y + locale + num_students + num_schools + percentage_fiber, data=joined[train_vector,], importance=T, ntree=501)
summary(connect.forest)
connect.forest$importance
predict.forest <- predict(connect.forest, joined[-train_vector,])
bw_predictions <- data.frame(cbind(predict.forest, joined[-train_vector, 2]))
bw_predictions$diff <- bw_predictions$V2 - bw_predictions$predict.forest
View(bw_predictions)
options(scipen=100)
hist(bw_predictions$diff, col="dodgerblue", xlim=c(-5000,5000), breaks=30)
table(predict.forest)
confusionMatrix(predict.forest, reference=joined[-train_vector, 43])
connect.forest
colnames(joined)
connect.forest <- randomForest(as.numeric(ia_bandwidth_per_student.x) ~ ia_bandwidth_per_student.y + locale + num_students + num_schools + percentage_fiber, data=joined[train_vector,], importance=T, ntree=501)
print(connect.forest)
connect.forest$importance
predict.forest <- predict(connect.forest, joined[-train_vector,])
bw_predictions <- data.frame(cbind(predict.forest, joined[-train_vector, 2]))
bw_predictions$diff <- bw_predictions$V2 - bw_predictions$predict.forest
View(bw_predictions)
options(scipen=100)
hist(bw_predictions$diff, col="dodgerblue", xlim=c(-5000,5000), breaks=30)
table(predict.forest)
vif(predict.forest)
vif(connect.forest)
library(rfUtilities)
multi.collinear(connect.forest, p = 0.01)
multi.collinear(bw_predictions, p = 0.01)
bw_predictions <- data.frame(cbind(predict.forest, joined[-train_vector, 2]))
multi.collinear(bw_predictions, p = 0.01)
varImpPlot(connect.forest, type=2)
varImpPlot(connect.forest)
getTree(connect.forest, k=1, labelVar=FALSE)
setwd("~/Desktop/R Projects/Meeting Goals Prediction")
setwd("C:/Users/Justine/Documents/GitHub/ficher/Research Project Analysis/Machine Learn Clean")
raw <- read.csv('org_broadband_line_items.csv') # predictors
orig <- read.csv('org_broadband_line_items.csv') # predictors
orig <- read.csv('orig_broadband_line_items.csv') # predictors
verified <- read.csv('verified_broadband_line_items.csv') # outcome
nrow(orig)
nrow(verified)
